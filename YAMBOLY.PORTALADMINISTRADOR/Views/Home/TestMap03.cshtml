@{
    ViewBag.Title = "Home Page";
}
<div>
    <input type="button" id="createPolygon" value="Crear" />
    <input type="button" id="resetPolygon" value="Eliminar" style="display: none;" />
    <div id="showonPolygon"><b>Area:</b> <span id="areaPolygon">&nbsp700;</span></div>
    <div id="map" style="width:1200px ; height: 400px;"></div>
</div>

@section Scripts{
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB0hFla3KhpSUtpkjK7gqJVqfqUCI-7oFs&sensor=false&libraries=drawing"></script>

    <script>

        initialize();

        var map;
        var all_overlays = [];
        var drawingManager;
        var selectedShape;
        var colors = ['red', 'green', 'blue', 'orange', 'yellow', 'BlueViolet ', 'DarkMagenta', 'Brown ', 'Violet', 'Lime', 'GoldenRod','CadetBlue'];

        var shapeInfo = {
            type: null, //zone, route
            polygon: null //the polygon
        }

        function initialize() {
            map = new google.maps.Map(document.getElementById("map"), {
                center: new google.maps.LatLng(-12.0912651, -77.00467609999998),
                zoom: 13,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });

            drawingManager = new google.maps.drawing.DrawingManager({
                drawingMode: google.maps.drawing.OverlayType.POLYGON,
                drawingControl: false,
                markerOptions: {
                    draggable: true
                },
                polygonOptions: {
                    strokeWeight: 0,
                    fillOpacity: 0.45,
                    editable: true,
                    //fillColor: '#FF1493'
                }
            });

            google.maps.event.addListener(drawingManager, 'polygoncomplete', function (polygon) {
                //var area = google.maps.geometry.spherical.computeArea(selectedShape.getPath());
                //$('#areaPolygon').html(area.toFixed(2) + ' Sq meters');
                GetPointsFromPolygon(polygon);

                //Change color for next draw
                var polygonOptions = drawingManager.get('polygonOptions');
                polygonOptions.fillColor = colors[Math.floor(Math.random() * colors.length)];
                //drawingManager.set('polygonOptions', polygonOptions);
            });

            google.maps.event.addListener(drawingManager, 'overlaycomplete', function (e) {
                all_overlays.push(e);
                if (e.type != google.maps.drawing.OverlayType.MARKER) {

                    // Switch back to non-drawing mode after drawing a shape.
                    drawingManager.setDrawingMode(null);

                    // Add an event listener that selects the newly-drawn shape when the user
                    // mouses down on it.
                    var newShape = e.overlay;
                    newShape.type = e.type;
                    google.maps.event.addListener(newShape, 'click', function () {
                        setSelection(newShape);
                    });
                    setSelection(newShape);
                }
            });

            $('#createPolygon').click(function () {
                clearSelection();
                drawingManager.setMap(map);
                drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON);
            });

            $('#resetPolygon').click(function () {
                if (selectedShape) {
                    selectedShape.setMap(null);
                }
                drawingManager.setMap(null);
                $('#showonPolygon').hide();
                //$('#resetPolygon').hide();
            });

            $('#resetPolygon').show();

            function clearSelection() {
                if (selectedShape) {
                    selectedShape.setEditable(false);
                    selectedShape = null;
                }
            }

            function setSelection(shape) {
                clearSelection();
                selectedShape = shape;
                shape.setEditable(true);
                GetPointsFromPolygon(shape);
            }

            function GetPointsFromPolygon(polygon) {
                var coordinates = [];
                var message = '';
                message += "polygon points:" + "<br>";
                for (var i = 0; i < polygon.getPath().getLength(); i++) {
                    coordinates.push({
                        lat: polygon.getPath().getAt(i).lat(),
                        lng: polygon.getPath().getAt(i).lng()
                    });
                    //message += polygon.getPath().getAt(i).toUrlValue(6) + "<br>";
                }

                $('#areaPolygon').html(JSON.stringify(coordinates));
                console.log(coordinates);
            }

            google.maps.event.addListener(drawingManager, 'drawingmode_changed', clearSelection);
            google.maps.event.addListener(map, 'click', clearSelection);


        }

                //google.maps.event.addDomListener(window, "load", initialize);
            // Clear the current selection when the drawing mode is changed, or when the
            // map is clicked.
    </script>
}
